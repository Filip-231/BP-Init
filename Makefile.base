SHELL := /bin/bash

-include Makefile.common


.PHONY: docs
docs:: venv ## construct documentations
	. "$(_VENV_ACTIVATE)" && \
		sphinx-build -a -b html -E docs/source public

.PHONY: format
format:: venv ## format code
	. "$(_VENV_ACTIVATE)" && \
		isort . && black .

.PHONY: test
test:: venv ## run tests
	echo "Executing pytest"
	@. "$(_VENV_ACTIVATE)" && python -m pytest -p no:allure_pytest_bdd --alluredir=public/allure-results --cov --cov-report=term-missing \
			--cov-report=xml:public/coverage.xml \
			--pdb $(_DIR_STRUCTURE)/tests/ && \
				allure generate --clean --report-dir public/allure-report public/allure-results

.PHONY: test-report
test-report:: test ## show allure test report
	echo "Opening allure report."; \
	allure open "public/allure-report"

.PHONY: install
install:: pre-install freeze ## install all requirements
	echo "Installing requirements."; \
		. "$(_VENV_ACTIVATE)" && pip install -r $(_DIR_STRUCTURE)/requirements.txt

.PHONY: freeze
freeze: ## generate requirements from setup.cfg
	. "$(_VENV_ACTIVATE)" &&  pip-compile $(_DIR_STRUCTURE)/setup.cfg

.PHONY: lint
lint:: venv ## check all code styling
	. "$(_VENV_ACTIVATE)" && \
		prospector

.PHONY: clean
clean:: ## clean up cache and temp files
	find . -type f -name "*.py[cdo]" -delete
	find . -type d -name "__pycache__" -delete
	rm -rf .coverage .mypy_cache .pytest_cache *.egg-info build dist public
